{"version":3,"sources":["hooks/movies/components/lists.js","hooks/movies/services/api.js","hooks/movies/helpers/common.js","hooks/movies/components/pagination.js","hooks/movies/index.js","reportWebVitals.js","index.js"],"names":["Meta","Card","ListMovies","props","movies","length","style","margin","span","offset","textAlign","map","item","index","hoverable","marginLeft","marginBottom","cover","alt","original_title","src","poster_path","title","React","memo","apiMovies","getDataMovies","a","page","url","axios","get","response","status","data","results","helper","isEmptyObject","obj","prop","Object","prototype","hasOwnProperty","call","JSON","stringify","PaginationMovie","defaultCurrent","current","total","totalItems","pageSize","showSizeChanger","onChange","p","changePage","AppMovies","useState","loading","setLoading","setDataMovies","setPage","totalResults","setTotalResults","totalPage","useEffect","getData","active","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfbe0be2.chunk.js","sourcesContent":["import React from \"react\";\nimport {Row,  Col} from 'antd';\nimport { Card } from 'antd';\n\nconst { Meta } = Card;\nconst ListMovies = (props) => {\n    if(props.movies.length <= 0) {\n        return (\n            <Row style={{margin: '20px 0px'}}>\n                <Col span={20} offset={2}>\n                    <h3 style={{textAlign: 'center'}}> khong co du lieu bo phim nao ca !</h3>\n                </Col>\n            </Row>\n        )\n    }\n    return (\n        <>\n            <Row style={{margin: '20px 0px'}}>\n                <Col span={20} offset={2}>\n                    <Row>\n                    {props.movies.map((item, index) => (\n                        <Col span={6} key={index}>\n                        <Card\n                            hoverable\n                            style={{ marginLeft: '5px', marginBottom: '10px'}}\n                            cover={<img alt={item.original_title} src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} />}\n                        >\n                            <Meta title={item.title}  />\n                        </Card>\n                        </Col>\n                    ))}\n                        \n                    </Row>\n                </Col>\n            </Row>\n        </>\n    )\n\n}\n\nexport default React.memo(ListMovies);","import axios from \"axios\";\n\nconst getDataMovies = async (page = 1) => {\n    const url =`https://api.themoviedb.org/3/discover/movie?api_key=0aecc06bb4fadb06b5f071fef0c2ce6d&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}`;\n    const response = await axios.get(url);\n    const results = await response.status === 200 ? await response.data : {};\n    return results;\n}\n\nexport const apiMovies = {\n    getDataMovies\n}","function isEmptyObject(obj) {\n    for(let prop in obj) {\n      if(Object.prototype.hasOwnProperty.call(obj, prop)) {\n        return false;\n        // Khong rong\n      }\n    }\n  \n    return JSON.stringify(obj) === JSON.stringify({});\n    // tra ve true ===> object empty\n  }\n\n  export const helper = {\n      isEmptyObject\n  }","import React from \"react\";\nimport { Pagination, Row, Col } from 'antd';\n\n\nconst PaginationMovie = (props) => {\n    return (\n        <Row style={{margin: '30px 0px'}}>\n            <Col span={12} offset={6}>\n                 <Pagination \n                 defaultCurrent={props.current} \n                 total={props.totalItems} \n                 pageSize={20}    \n                 showSizeChanger={false}\n                 onChange={p=>props.changePage(p)}\n                 />\n            </Col>\n        </Row>\n    )\n}\n\nexport default React.memo(PaginationMovie);","import React, { useState, useEffect } from \"react\";\nimport {Row, Col, Skeleton} from 'antd';\nimport ListMovies from './components/lists';\nimport { apiMovies } from \"./services/api\";\nimport {helper} from './helpers/common';\nimport PaginationMovie from './components/pagination';\n\n\nconst AppMovies = () => {\n    const [loading, setLoading] = useState(true);   //Khi vao web la call luon API\n    const [movies, setDataMovies] = useState({});\n    const [page, setPage] = useState(1);\n    const [totalResults, setTotalResults] = useState(0);\n    const [totalPage, setTotalPage] = useState(0);\n    useEffect(() => {\n        // tuong duong nhu componentDidMount\n        const getData = async () => {\n            await setLoading(true);\n            const data = await apiMovies.getDataMovies(page);\n            if(!helper.isEmptyObject(data)) {\n                if(data.hasOwnProperty('results')) {\n                    setDataMovies(data['results']);\n                }\n                if(data.hasOwnProperty('total_results')) {\n                    setTotalResults(data['total_results'])\n                }\n                if(data.hasOwnProperty('total_pages')) {\n                    setTotalResults(data['total_pages'])\n                }\n            }\n            await setLoading(false);\n\n        }\n        getData();\n    }, [page]);\n\n    const changePage = (p) => {\n        if (p>=1 && p<= totalPage){\n            // cap nhat lai state page\n            setPage(p)\n        }\n    }\n    return (\n        <>\n            <Row>\n                <Col span={24}>\n                    <h1 style={{textAlign: 'center'}}>Thong tin cac bo phim</h1>\n                    {loading ? \n                    (<Skeleton active />) \n                    : (\n                        <>\n                        <ListMovies movies={movies}/>\n                        <PaginationMovie \n                        totalItems={totalResults}\n                        current={page}  \n                        changePage={changePage}\n                        />\n                        </>\n                    )}\n                </Col>\n            </Row>\n        </>\n\n    )\n}\n\nexport default React.memo(AppMovies);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css'; \nimport App from './hooks/movies/index';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}