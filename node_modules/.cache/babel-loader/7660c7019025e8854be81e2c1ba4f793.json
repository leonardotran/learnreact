{"ast":null,"code":"import { call, put, takeEvery } from 'redux-saga/effects';\nimport { loadingGetdataProduction, getDataProductSuccess, getDataProductFail, REQUEST_DATA_PRODUCTIONS } from '../reducers/actions';\nimport { apiShopping } from '../../../services/api';\n\nfunction* homeSaga() {\n  try {\n    yield put(loadingGetdataProduction(true));\n    const data = yield call(apiShopping.getAllDataProducts);\n    yield put(getDataProductSuccess(data));\n  } catch (e) {\n    yield put(getDataProductFail(e));\n  } finally {\n    yield put(loadingGetdataProduction(false));\n  }\n}\n\nexport function* watchHomeSaga() {\n  yield takeEvery(REQUEST_DATA_PRODUCTIONS, homeSaga);\n}","map":{"version":3,"sources":["/Users/loctran/Desktop/learnReact/src/shopping/pages/home/sagas/home.js"],"names":["call","put","takeEvery","loadingGetdataProduction","getDataProductSuccess","getDataProductFail","REQUEST_DATA_PRODUCTIONS","apiShopping","homeSaga","data","getAllDataProducts","e","watchHomeSaga"],"mappings":"AAAA,SAAQA,IAAR,EAAcC,GAAd,EAAmBC,SAAnB,QAAmC,oBAAnC;AACA,SACIC,wBADJ,EAEIC,qBAFJ,EAGIC,kBAHJ,EAIIC,wBAJJ,QAKO,qBALP;AAOA,SAAQC,WAAR,QAA0B,uBAA1B;;AAEA,UAAUC,QAAV,GAAqB;AACjB,MAAI;AACA,UAAMP,GAAG,CAACE,wBAAwB,CAAC,IAAD,CAAzB,CAAT;AACA,UAAMM,IAAI,GAAG,MAAMT,IAAI,CAACO,WAAW,CAACG,kBAAb,CAAvB;AACA,UAAMT,GAAG,CAACG,qBAAqB,CAACK,IAAD,CAAtB,CAAT;AACH,GAJD,CAIE,OAAOE,CAAP,EAAU;AACR,UAAMV,GAAG,CAACI,kBAAkB,CAACM,CAAD,CAAnB,CAAT;AACH,GAND,SAMU;AACN,UAAMV,GAAG,CAACE,wBAAwB,CAAC,KAAD,CAAzB,CAAT;AACH;AACJ;;AAED,OAAO,UAAUS,aAAV,GAA0B;AAC7B,QAAMV,SAAS,CAACI,wBAAD,EAA2BE,QAA3B,CAAf;AACH","sourcesContent":["import {call, put, takeEvery} from 'redux-saga/effects';\nimport {\n    loadingGetdataProduction,\n    getDataProductSuccess,\n    getDataProductFail,\n    REQUEST_DATA_PRODUCTIONS\n} from '../reducers/actions'\n\nimport {apiShopping} from '../../../services/api';\n\nfunction* homeSaga() {\n    try {\n        yield put(loadingGetdataProduction(true));\n        const data = yield call(apiShopping.getAllDataProducts);\n        yield put(getDataProductSuccess(data));\n    } catch (e) {\n        yield put(getDataProductFail(e));\n    } finally {\n        yield put(loadingGetdataProduction(false));\n    }\n}\n\nexport function* watchHomeSaga() {\n    yield takeEvery(REQUEST_DATA_PRODUCTIONS, homeSaga);\n}"]},"metadata":{},"sourceType":"module"}