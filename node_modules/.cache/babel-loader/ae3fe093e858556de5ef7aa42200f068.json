{"ast":null,"code":"var _jsxFileName = \"/Users/loctran/Desktop/hocreact/src/netflix/pages/upcoming/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport moment from 'moment';\nimport LayoutMovies from '../../components/layout/index';\nimport { Row, Col, DatePicker } from 'antd';\nimport { apiMovie } from \"../../services/movie\";\nimport { helper } from \"../../helpers/common\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  RangePicker\n} = DatePicker;\n\nfunction disabledDate(current) {\n  // Can not select days before today and today\n  return current && current < moment().endOf('day');\n}\n\nconst UpcomingMovies = () => {\n  _s();\n\n  const [loadingComing, setLoadingComing] = useState(false);\n  const [fDate, setFromDate] = useState('');\n  const [tDate, setToDate] = useState('');\n  const [page, setPage] = useState(1);\n  const [totalItem, setTotalItem] = useState(0);\n  const [totalPage, setTotalPage] = useState(0);\n  const [upcomingData, setUpcomingData] = useState([]);\n\n  const getTimeDate = async date => {\n    // console.log(moment(date[0]).format('YYYY-MM-DD'));\n    const fromDate = moment(date[0]).format('YYYY-MM-DD');\n    const toDate = moment(date[1]).format('YYYY-MM-DD');\n\n    if (fromDate !== '' && toDate !== '') {\n      await setLoadingComing(true); //call du lieu\n\n      const dataMovies = await apiMovie.getUpcomingMovies(fromDate, toDate);\n      console.log(dataMovies);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(LayoutMovies, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        offset: 6,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"This is upcoming movies page!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RangePicker, {\n          disabledDate: disabledDate,\n          onChange: val => getTimeDate(val)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpcomingMovies, \"3q9K6R7QAzWw6fve4KroglAc2Rw=\");\n\n_c = UpcomingMovies;\nexport default _c2 = /*#__PURE__*/React.memo(UpcomingMovies);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UpcomingMovies\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/loctran/Desktop/hocreact/src/netflix/pages/upcoming/index.js"],"names":["React","useState","moment","LayoutMovies","Row","Col","DatePicker","apiMovie","helper","RangePicker","disabledDate","current","endOf","UpcomingMovies","loadingComing","setLoadingComing","fDate","setFromDate","tDate","setToDate","page","setPage","totalItem","setTotalItem","totalPage","setTotalPage","upcomingData","setUpcomingData","getTimeDate","date","fromDate","format","toDate","dataMovies","getUpcomingMovies","console","log","val","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAAQC,GAAR,EAAaC,GAAb,EAAkBC,UAAlB,QAAmC,MAAnC;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,MAAT,QAAuB,sBAAvB;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAkBH,UAAxB;;AAEA,SAASI,YAAT,CAAsBC,OAAtB,EAA+B;AAC3B;AACA,SAAOA,OAAO,IAAIA,OAAO,GAAGT,MAAM,GAAGU,KAAT,CAAe,KAAf,CAA5B;AACD;;AAGH,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACe,KAAD,EAAQC,WAAR,IAAuBhB,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACiB,KAAD,EAAQC,SAAR,IAAqBlB,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACqB,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACuB,SAAD,EAAYC,YAAZ,IAA4BxB,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACyB,YAAD,EAAeC,eAAf,IAAkC1B,QAAQ,CAAC,EAAD,CAAhD;;AAGA,QAAM2B,WAAW,GAAG,MAAOC,IAAP,IAAgB;AAChC;AACA,UAAMC,QAAQ,GAAG5B,MAAM,CAAC2B,IAAI,CAAC,CAAD,CAAL,CAAN,CAAgBE,MAAhB,CAAuB,YAAvB,CAAjB;AACA,UAAMC,MAAM,GAAK9B,MAAM,CAAC2B,IAAI,CAAC,CAAD,CAAL,CAAN,CAAgBE,MAAhB,CAAuB,YAAvB,CAAjB;;AAEA,QAAGD,QAAQ,KAAK,EAAb,IAAmBE,MAAM,KAAK,EAAjC,EAAqC;AACjC,YAAMjB,gBAAgB,CAAC,IAAD,CAAtB,CADiC,CACH;;AAC9B,YAAMkB,UAAU,GAAG,MAAM1B,QAAQ,CAAC2B,iBAAT,CAA2BJ,QAA3B,EAAqCE,MAArC,CAAzB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACH;AACJ,GAVD;;AAWA,sBACI,QAAC,YAAD;AAAA,2BACI,QAAC,GAAD;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAe,QAAA,MAAM,EAAE,CAAvB;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,WAAD;AAAa,UAAA,YAAY,EAAEvB,YAA3B;AACI,UAAA,QAAQ,EAAE2B,GAAG,IAAGT,WAAW,CAACS,GAAD;AAD/B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAnCD;;GAAMxB,c;;KAAAA,c;AAoCN,kCAAeb,KAAK,CAACsC,IAAN,CAAWzB,cAAX,CAAf","sourcesContent":["import React, {useState} from \"react\";\nimport moment from 'moment';\n\nimport LayoutMovies from '../../components/layout/index';\nimport {Row, Col, DatePicker} from 'antd';\nimport { apiMovie } from \"../../services/movie\";\nimport { helper } from \"../../helpers/common\";\n\nconst { RangePicker } = DatePicker;\n\nfunction disabledDate(current) {\n    // Can not select days before today and today\n    return current && current < moment().endOf('day');\n  }\n\n\nconst UpcomingMovies = () => {\n    const [loadingComing, setLoadingComing] = useState(false);\n    const [fDate, setFromDate] = useState('');\n    const [tDate, setToDate] = useState('')\n    const [page, setPage] = useState(1);\n    const [totalItem, setTotalItem] = useState(0);\n    const [totalPage, setTotalPage] = useState(0);\n    const [upcomingData, setUpcomingData] = useState([]);\n\n\n    const getTimeDate = async (date) => {\n        // console.log(moment(date[0]).format('YYYY-MM-DD'));\n        const fromDate = moment(date[0]).format('YYYY-MM-DD');\n        const toDate   = moment(date[1]).format('YYYY-MM-DD');\n\n        if(fromDate !== '' && toDate !== '') {\n            await setLoadingComing(true); //call du lieu\n            const dataMovies = await apiMovie.getUpcomingMovies(fromDate, toDate);\n            console.log(dataMovies);\n        }\n    }\n    return (\n        <LayoutMovies>\n            <Row>\n                <Col span={12} offset={6}>\n                    <h1>This is upcoming movies page!</h1>\n                    <RangePicker disabledDate={disabledDate} \n                        onChange={val=> getTimeDate(val)}\n                    />\n\n\n                </Col>\n            </Row>\n        </LayoutMovies>\n    )\n}\nexport default React.memo(UpcomingMovies);"]},"metadata":{},"sourceType":"module"}