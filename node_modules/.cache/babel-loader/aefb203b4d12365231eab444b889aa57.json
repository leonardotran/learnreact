{"ast":null,"code":"var _jsxFileName = \"/Users/loctran/Desktop/hocreact/src/netflix/pages/login/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Row, Col, Form, Input, Button, Spin } from 'antd';\nimport { apiMovie } from \"../../services/movie\";\nimport { useHistory } from \"react-router-dom\";\nimport { apiLogin } from \"../../services/login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginMovies = () => {\n  _s();\n\n  const history = useHistory();\n  const [loadingLogin, setLoadingLogin] = useState(false);\n  const [messError, setMessError] = useState(null);\n\n  const onFinish = async values => {\n    await setLoadingLogin(true);\n    let username = values.username;\n    let password = values.password;\n\n    if (username !== '' && password !== '') {\n      // call api login \n      let token = await apiMoapiLoginvie.loginUser(username, password);\n\n      if (token.hasOwnProperty('token')) {\n        //login thanh cong\n        await setLoadingLogin(false); //Di vao trang phim (popular, search)\n\n        history.push(\"/popular-movies\");\n      } else {\n        //login KO thanh cong\n        await setLoadingLogin(true);\n        await setMessError(token['error']);\n      }\n    } // console.log('Success:', values);\n\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      span: 12,\n      offset: 6,\n      children: [messError !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: messError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        name: \"basic\",\n        labelCol: {\n          span: 8\n        },\n        wrapperCol: {\n          span: 16\n        },\n        initialValues: {\n          remember: true\n        },\n        onFinish: onFinish,\n        onFinishFailed: onFinishFailed,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Username\",\n          name: \"username\",\n          rules: [{\n            required: true,\n            message: 'Please input your username!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Password\",\n          name: \"password\",\n          rules: [{\n            required: true,\n            message: 'Please input your password!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: {\n            offset: 8,\n            span: 16\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            disabled: loadingLogin,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), loadingLogin && /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginMovies, \"D5JezJnRsBCwpcv9mDmvAOkXuzw=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoginMovies;\nexport default _c2 = /*#__PURE__*/React.memo(LoginMovies);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginMovies\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/loctran/Desktop/hocreact/src/netflix/pages/login/index.js"],"names":["React","useState","Row","Col","Form","Input","Button","Spin","apiMovie","useHistory","apiLogin","LoginMovies","history","loadingLogin","setLoadingLogin","messError","setMessError","onFinish","values","username","password","token","apiMoapiLoginvie","loginUser","hasOwnProperty","push","onFinishFailed","errorInfo","console","log","color","span","remember","required","message","offset","memo"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport { Row, Col, Form, Input, Button, Spin } from 'antd';\nimport { apiMovie } from \"../../services/movie\";\nimport { useHistory } from \"react-router-dom\";\nimport { apiLogin } from \"../../services/login\";\n\nconst LoginMovies = () => {\n    const history = useHistory();\n    const [loadingLogin, setLoadingLogin] = useState(false);\n    const [messError, setMessError] = useState(null);\n\n    const onFinish = async (values) => {\n        await setLoadingLogin(true);\n        let username = values.username;\n        let password = values.password;\n        if(username !== '' && password !== '') {\n            // call api login \n            let token = await apiMoapiLoginvie.loginUser(username, password);\n            if(token.hasOwnProperty('token')) {\n                //login thanh cong\n                await setLoadingLogin(false);\n                //Di vao trang phim (popular, search)\n                history.push(\"/popular-movies\");\n\n            } else{\n                //login KO thanh cong\n                await setLoadingLogin(true);\n                await setMessError(token['error'])\n            }\n        }\n        // console.log('Success:', values);\n    };\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n    return (\n        <Row>\n                <Col span={12} offset={6}>\n                { messError !== null && <p style={{color: 'red'}}>{messError}</p>}\n                <Form\n                    name=\"basic\"\n                    labelCol={{\n                        span: 8,\n                    }}\n                    wrapperCol={{\n                        span: 16,\n                    }}\n                    initialValues={{\n                        remember: true,\n                    }}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Form.Item\n                        label=\"Username\"\n                        name=\"username\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your username!',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Password\"\n                        name=\"password\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your password!',\n                            },\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n\n            \n\n                    <Form.Item\n                        wrapperCol={{\n                            offset: 8,\n                            span: 16,\n                        }}\n                    >\n                        <Button \n                        type=\"primary\" \n                        htmlType=\"submit\"\n                        disabled={loadingLogin}\n                        >\n                            Login\n                        </Button>\n                        { loadingLogin && <Spin/>}\n                    </Form.Item>\n                </Form>\n            </Col>\n        </Row>\n    )\n}\n\nexport default React.memo(LoginMovies);"]},"metadata":{},"sourceType":"module"}