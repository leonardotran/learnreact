{"ast":null,"code":"import axios from \"axios\";\nimport { Jwt } from \"jsonwebtoken\"; // api search: https://api.themoviedb.org/3/search/movie?query=\n//batman&api_key=cfe422613b250f702980a3bbf9e90716&page=1\n\nconst searchMovieByName = async (nameMovie, page = 1) => {\n  const url = `https://api.themoviedb.org/3/search/movie?query=${nameMovie}&api_key=cfe422613b250f702980a3bbf9e90716&page=${page}`;\n  const response = await axios.get(url);\n  const result = (await response.status) === 200 ? await response.data : {};\n  return result;\n}; //api detail:\n\n\nconst getDetailMovieById = async id => {\n  const url = `https://api.themoviedb.org/3/movie/${id}?api_key=0aecc06bb4fadb06b5f071fef0c2ce6d&&language=en-US&append_to_response=videos,images&include_image_language=en,null`;\n  const response = await axios.get(url);\n  const result = (await response.status) === 200 ? await response.data : {};\n  return result;\n};\n\nconst getUpcomingMovies = async (fdate, tdate, page = 1) => {\n  const url = `https://api.themoviedb.org/3/discover/movie?api_key=0aecc06bb4fadb06b5f071fef0c2ce6d&language=en-US&region=US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&release_date.gte=${fdate}&release_date.lte=${tdate}&with_release_type=3|2`;\n  const response = await axios.get(url);\n  const result = (await response.status) === 200 ? await response.data : {};\n  return result;\n};\n\nconst loginUser = async (user, pass) => {\n  const url = `https://reqres.in/api/login`;\n  const params = new URLSearchParams();\n  params.append('email', user);\n  params.append('password', pass);\n  const config = {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  };\n  const response = await axios.post(url, params, config);\n  const result = (await response.status) === 200 ? await response.data : {};\n  return result;\n};\n\nexport const apiMovie = {\n  searchMovieByName,\n  getDetailMovieById,\n  getUpcomingMovies,\n  loginUser\n};","map":{"version":3,"sources":["/Users/loctran/Desktop/hocreact/src/netflix/services/movie.js"],"names":["axios","Jwt","searchMovieByName","nameMovie","page","url","response","get","result","status","data","getDetailMovieById","id","getUpcomingMovies","fdate","tdate","loginUser","user","pass","params","URLSearchParams","append","config","headers","post","apiMovie"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,cAApB,C,CAEA;AACA;;AAEA,MAAMC,iBAAiB,GAAG,OAAOC,SAAP,EAAkBC,IAAI,GAAG,CAAzB,KAA+B;AACrD,QAAMC,GAAG,GAAI,mDAAkDF,SAAU,kDAAiDC,IAAK,EAA/H;AACA,QAAME,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAUF,GAAV,CAAvB;AACA,QAAMG,MAAM,GAAG,OAAMF,QAAQ,CAACG,MAAf,MAA0B,GAA1B,GAAgC,MAAMH,QAAQ,CAACI,IAA/C,GAAsD,EAArE;AACA,SAAOF,MAAP;AAEH,CAND,C,CAOA;;;AACA,MAAMG,kBAAkB,GAAG,MAAOC,EAAP,IAAc;AACrC,QAAMP,GAAG,GAAI,sCAAqCO,EAAG,2HAArD;AACA,QAAMN,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAUF,GAAV,CAAvB;AACA,QAAMG,MAAM,GAAG,OAAMF,QAAQ,CAACG,MAAf,MAA0B,GAA1B,GAAgC,MAAMH,QAAQ,CAACI,IAA/C,GAAsD,EAArE;AACA,SAAOF,MAAP;AACH,CALD;;AAMA,MAAMK,iBAAiB,GAAG,OAAOC,KAAP,EAAcC,KAAd,EAAqBX,IAAI,GAAG,CAA5B,KAAkC;AACxD,QAAMC,GAAG,GAAI,sLAAqLD,IAAK,qBAAoBU,KAAM,qBAAoBC,KAAM,wBAA3P;AACA,QAAMT,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAUF,GAAV,CAAvB;AACA,QAAMG,MAAM,GAAG,OAAMF,QAAQ,CAACG,MAAf,MAA0B,GAA1B,GAAgC,MAAMH,QAAQ,CAACI,IAA/C,GAAsD,EAArE;AACA,SAAOF,MAAP;AACH,CALD;;AAOA,MAAMQ,SAAS,GAAG,OAAOC,IAAP,EAAaC,IAAb,KAAsB;AACpC,QAAMb,GAAG,GAAG,6BAAZ;AACA,QAAMc,MAAM,GAAG,IAAIC,eAAJ,EAAf;AACAD,EAAAA,MAAM,CAACE,MAAP,CAAc,OAAd,EAAsBJ,IAAtB;AACAE,EAAAA,MAAM,CAACE,MAAP,CAAc,UAAd,EAAyBH,IAAzB;AACA,QAAMI,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADE,GAAf;AAKA,QAAMjB,QAAQ,GAAG,MAAMN,KAAK,CAACwB,IAAN,CAAWnB,GAAX,EAAgBc,MAAhB,EAAwBG,MAAxB,CAAvB;AACA,QAAMd,MAAM,GAAK,OAAMF,QAAQ,CAACG,MAAf,MAA0B,GAA1B,GAAgC,MAAMH,QAAQ,CAACI,IAA/C,GAAsD,EAAvE;AACA,SAAOF,MAAP;AACH,CAbD;;AAeA,OAAO,MAAMiB,QAAQ,GAAG;AACpBvB,EAAAA,iBADoB;AAEpBS,EAAAA,kBAFoB;AAGpBE,EAAAA,iBAHoB;AAIpBG,EAAAA;AAJoB,CAAjB","sourcesContent":["import axios from \"axios\";\nimport { Jwt } from \"jsonwebtoken\";\n\n// api search: https://api.themoviedb.org/3/search/movie?query=\n//batman&api_key=cfe422613b250f702980a3bbf9e90716&page=1\n\nconst searchMovieByName = async (nameMovie, page = 1) => {\n    const url = `https://api.themoviedb.org/3/search/movie?query=${nameMovie}&api_key=cfe422613b250f702980a3bbf9e90716&page=${page}`;\n    const response = await axios.get(url);\n    const result = await response.status === 200 ? await response.data : {};\n    return result;\n\n}\n//api detail:\nconst getDetailMovieById = async (id) => {\n    const url = `https://api.themoviedb.org/3/movie/${id}?api_key=0aecc06bb4fadb06b5f071fef0c2ce6d&&language=en-US&append_to_response=videos,images&include_image_language=en,null`;\n    const response = await axios.get(url);\n    const result = await response.status === 200 ? await response.data : {};\n    return result;\n}\nconst getUpcomingMovies = async (fdate, tdate, page = 1) => {\n    const url = `https://api.themoviedb.org/3/discover/movie?api_key=0aecc06bb4fadb06b5f071fef0c2ce6d&language=en-US&region=US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&release_date.gte=${fdate}&release_date.lte=${tdate}&with_release_type=3|2`\n    const response = await axios.get(url);\n    const result = await response.status === 200 ? await response.data : {};\n    return result;\n}\n\nconst loginUser = async (user, pass) => {\n    const url =`https://reqres.in/api/login`;\n    const params = new URLSearchParams();\n    params.append('email',user);\n    params.append('password',pass);\n    const config = {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      }\n    const response = await axios.post(url, params, config);\n    const result   = await response.status === 200 ? await response.data : {};\n    return result;\n}\n\nexport const apiMovie = {\n    searchMovieByName,\n    getDetailMovieById,\n    getUpcomingMovies,\n    loginUser\n}"]},"metadata":{},"sourceType":"module"}