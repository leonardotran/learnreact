{"ast":null,"code":"var _jsxFileName = \"/Users/loctran/Desktop/hocreact/src/netflix/pages/login/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Row, Col, Form, Input, Button } from 'antd';\nimport { apiMovie } from \"../../services/movie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginMovies = () => {\n  _s();\n\n  const [loadingLogin, setLoadingLogin] = useState(false);\n\n  const onFinish = async values => {\n    await setLoadingLogin(true);\n    let username = values.username;\n    let password = values.password;\n\n    if (username !== '' && password !== '') {\n      // call api login \n      let token = await apiMovie.loginUser(username, password);\n\n      if (token.hasOwnProperty('token')) {//login thanh cong\n      } else {//login KO thanh cong\n        }\n    } // console.log('Success:', values);\n\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      span: 12,\n      offset: 6,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        name: \"basic\",\n        labelCol: {\n          span: 8\n        },\n        wrapperCol: {\n          span: 16\n        },\n        initialValues: {\n          remember: true\n        },\n        onFinish: onFinish,\n        onFinishFailed: onFinishFailed,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Username\",\n          name: \"username\",\n          rules: [{\n            required: true,\n            message: 'Please input your username!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Password\",\n          name: \"password\",\n          rules: [{\n            required: true,\n            message: 'Please input your password!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: {\n            offset: 8,\n            span: 16\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginMovies, \"yTnc12A3Iy6WS1fD3sqNWfvrk1o=\");\n\n_c = LoginMovies;\nexport default _c2 = /*#__PURE__*/React.memo(LoginMovies);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginMovies\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/loctran/Desktop/hocreact/src/netflix/pages/login/index.js"],"names":["React","useState","Row","Col","Form","Input","Button","apiMovie","LoginMovies","loadingLogin","setLoadingLogin","onFinish","values","username","password","token","loginUser","hasOwnProperty","onFinishFailed","errorInfo","console","log","span","remember","required","message","offset","memo"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport { Row, Col, Form, Input, Button } from 'antd';\nimport { apiMovie } from \"../../services/movie\";\n\nconst LoginMovies = () => {\n    const [loadingLogin, setLoadingLogin] = useState(false);\n\n\n    const onFinish = async (values) => {\n        await setLoadingLogin(true);\n        let username = values.username;\n        let password = values.password;\n        if(username !== '' && password !== '') {\n            // call api login \n            let token = await apiMovie.loginUser(username, password);\n            if(token.hasOwnProperty('token')) {\n                //login thanh cong\n            } else{\n                //login KO thanh cong\n            }\n        }\n        // console.log('Success:', values);\n    };\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n    return (\n        <Row>\n                <Col span={12} offset={6}>\n                <Form\n                    name=\"basic\"\n                    labelCol={{\n                        span: 8,\n                    }}\n                    wrapperCol={{\n                        span: 16,\n                    }}\n                    initialValues={{\n                        remember: true,\n                    }}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Form.Item\n                        label=\"Username\"\n                        name=\"username\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your username!',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Password\"\n                        name=\"password\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your password!',\n                            },\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n\n            \n\n                    <Form.Item\n                        wrapperCol={{\n                            offset: 8,\n                            span: 16,\n                        }}\n                    >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Col>\n        </Row>\n    )\n}\n\nexport default React.memo(LoginMovies);"]},"metadata":{},"sourceType":"module"}