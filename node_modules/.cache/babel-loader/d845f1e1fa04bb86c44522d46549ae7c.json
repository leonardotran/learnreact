{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport rootReducer from './reducer';\nimport rootSaga from './saga';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst configPersistRootReducer = {\n  key: 'app_shopping_react',\n  storage: storage,\n  whitelist: ['cartReducer']\n};\nconst rootReducerPersist = persistReducer(configPersistRootReducer, rootReducer); // create the saga middleware\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst configStore = () => {\n  const store = createStore(rootReducerPersist, applyMiddleware(logger, sagaMiddleware));\n  sagaMiddleware.run(rootSaga);\n  return {\n    store: store\n  };\n};\n\nexport default configStore;","map":{"version":3,"sources":["/Users/loctran/Desktop/learnReact/src/shopping/redux/store.js"],"names":["createStore","applyMiddleware","createSagaMiddleware","logger","rootReducer","rootSaga","persistReducer","storage","configPersistRootReducer","key","whitelist","rootReducerPersist","sagaMiddleware","configStore","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA4C,OAA5C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,WAAxB;AACA,OAAOC,QAAP,MAAqB,QAArB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,wBAAwB,GAAG;AAC7BC,EAAAA,GAAG,EAAE,oBADwB;AAE7BF,EAAAA,OAAO,EAAEA,OAFoB;AAG7BG,EAAAA,SAAS,EAAE,CAAC,aAAD;AAHkB,CAAjC;AAMA,MAAMC,kBAAkB,GAAGL,cAAc,CAACE,wBAAD,EAA2BJ,WAA3B,CAAzC,C,CACA;;AACA,MAAMQ,cAAc,GAAGV,oBAAoB,EAA3C;;AAEA,MAAMW,WAAW,GAAG,MAAM;AACtB,QAAMC,KAAK,GAAGd,WAAW,CACrBW,kBADqB,EAErBV,eAAe,CACXE,MADW,EAEXS,cAFW,CAFM,CAAzB;AAOAA,EAAAA,cAAc,CAACG,GAAf,CAAmBV,QAAnB;AACA,SAAO;AAACS,IAAAA,KAAK,EAAEA;AAAR,GAAP;AACH,CAVD;;AAYA,eAAeD,WAAf","sourcesContent":["import { createStore, applyMiddleware} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport rootReducer from './reducer';\nimport rootSaga from './saga';\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nconst configPersistRootReducer = {\n    key: 'app_shopping_react',\n    storage: storage,\n    whitelist: ['cartReducer']\n}\n\nconst rootReducerPersist = persistReducer(configPersistRootReducer, rootReducer)\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n\nconst configStore = () => {\n    const store = createStore(\n        rootReducerPersist,\n        applyMiddleware(\n            logger,\n            sagaMiddleware\n        )\n    );\n    sagaMiddleware.run(rootSaga);\n    return {store: store}\n}\n\nexport default configStore;"]},"metadata":{},"sourceType":"module"}