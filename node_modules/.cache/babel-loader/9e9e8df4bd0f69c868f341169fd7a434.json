{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport rootReducer from './reducer';\nimport rootSaga from './saga';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst configPersistRootReducer = {\n  key: 'app_shopping_react',\n  storage: storage,\n  whitelist: ['cartReducer']\n};\nconst rootReducerPersist = persistReducer(configPersistRootReducer, rootReducer); // create the saga middleware\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst configStore = () => {\n  const store = createStore(rootReducerPersist, applyMiddleware(logger, sagaMiddleware));\n  const persistor = persistStore;\n  sagaMiddleware.run(rootSaga);\n  return {\n    store: store\n  };\n};\n\nexport default configStore;","map":{"version":3,"sources":["/Users/loctran/Desktop/learnReact/src/shopping/redux/store.js"],"names":["createStore","applyMiddleware","createSagaMiddleware","logger","rootReducer","rootSaga","persistReducer","persistStore","storage","configPersistRootReducer","key","whitelist","rootReducerPersist","sagaMiddleware","configStore","store","persistor","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA4C,OAA5C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,WAAxB;AACA,OAAOC,QAAP,MAAqB,QAArB;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,wBAAwB,GAAG;AAC7BC,EAAAA,GAAG,EAAE,oBADwB;AAE7BF,EAAAA,OAAO,EAAEA,OAFoB;AAG7BG,EAAAA,SAAS,EAAE,CAAC,aAAD;AAHkB,CAAjC;AAMA,MAAMC,kBAAkB,GAAGN,cAAc,CAACG,wBAAD,EAA2BL,WAA3B,CAAzC,C,CACA;;AACA,MAAMS,cAAc,GAAGX,oBAAoB,EAA3C;;AAEA,MAAMY,WAAW,GAAG,MAAM;AACtB,QAAMC,KAAK,GAAGf,WAAW,CACrBY,kBADqB,EAErBX,eAAe,CACXE,MADW,EAEXU,cAFW,CAFM,CAAzB;AAOA,QAAMG,SAAS,GAAGT,YAAlB;AACAM,EAAAA,cAAc,CAACI,GAAf,CAAmBZ,QAAnB;AACA,SAAO;AAACU,IAAAA,KAAK,EAAEA;AAAR,GAAP;AACH,CAXD;;AAaA,eAAeD,WAAf","sourcesContent":["import { createStore, applyMiddleware} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport rootReducer from './reducer';\nimport rootSaga from './saga';\nimport { persistReducer, persistStore } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nconst configPersistRootReducer = {\n    key: 'app_shopping_react',\n    storage: storage,\n    whitelist: ['cartReducer']\n}\n\nconst rootReducerPersist = persistReducer(configPersistRootReducer, rootReducer)\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n\nconst configStore = () => {\n    const store = createStore(\n        rootReducerPersist,\n        applyMiddleware(\n            logger,\n            sagaMiddleware\n        )\n    );\n    const persistor = persistStore\n    sagaMiddleware.run(rootSaga);\n    return {store: store}\n}\n\nexport default configStore;"]},"metadata":{},"sourceType":"module"}