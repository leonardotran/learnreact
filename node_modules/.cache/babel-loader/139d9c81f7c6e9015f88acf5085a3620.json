{"ast":null,"code":"var _jsxFileName = \"/Users/loctran/Desktop/hocreact/src/netflix/pages/search/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport LayoutMovies from '../../components/layout/index';\nimport { Row, Col, Input } from 'antd';\nimport { apiMovie } from \"../../services/movie\";\nimport { helper } from '../../helpers/common';\nimport ListMovie from \"../../components/list-movies/ListMovie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Search\n} = Input;\n\nconst SearchMovies = () => {\n  _s();\n\n  const [loadingSearch, setLoadingSearch] = useState(false);\n  const [dataSearch, setDataSearch] = useState([]);\n  const [page, setPage] = useState(1);\n  const [keyword, setKeyword] = useState('');\n\n  const searchDataMovies = async name => {\n    if (name !== '') {\n      await setLoadingSearch(true);\n      await setKeyword(name);\n      const data = await apiMovie.searchMovieByName(name, 1);\n\n      if (!helper.isEmptyObject(data)) {\n        if (data.hasOwnProperty('results')) {\n          // kiem tra co trong object co key hay ko? \n          await setDataSearch(data['results']);\n        }\n      }\n\n      await setLoadingSearch(false);\n    }\n  }; // console.log(dataSearch);\n\n\n  return /*#__PURE__*/_jsxDEV(LayoutMovies, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        offset: 6,\n        children: /*#__PURE__*/_jsxDEV(Search, {\n          placeholder: \"name of the movie\",\n          allowClear: true,\n          enterButton: \"Search\",\n          size: \"large\",\n          onSearch: val => searchDataMovies(val),\n          loading: loadingSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListMovie, {\n      movies: dataSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchMovies, \"93oY8vNFFsv+oZ4Tt1hmBzJcK8M=\");\n\n_c = SearchMovies;\nexport default _c2 = /*#__PURE__*/React.memo(SearchMovies);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchMovies\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/loctran/Desktop/hocreact/src/netflix/pages/search/index.js"],"names":["React","useState","LayoutMovies","Row","Col","Input","apiMovie","helper","ListMovie","Search","SearchMovies","loadingSearch","setLoadingSearch","dataSearch","setDataSearch","page","setPage","keyword","setKeyword","searchDataMovies","name","data","searchMovieByName","isEmptyObject","hasOwnProperty","val","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAAQC,GAAR,EAAaC,GAAb,EAAkBC,KAAlB,QAA8B,MAA9B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAAQC,MAAR,QAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,wCAAtB;;AAEA,MAAM;AAACC,EAAAA;AAAD,IAAWJ,KAAjB;;AAEA,MAAMK,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMkB,gBAAgB,GAAG,MAAOC,IAAP,IAAgB;AACrC,QAAGA,IAAI,KAAK,EAAZ,EAAgB;AACZ,YAAMR,gBAAgB,CAAC,IAAD,CAAtB;AACA,YAAMM,UAAU,CAACE,IAAD,CAAhB;AACA,YAAMC,IAAI,GAAG,MAAMf,QAAQ,CAACgB,iBAAT,CAA2BF,IAA3B,EAAiC,CAAjC,CAAnB;;AACA,UAAG,CAACb,MAAM,CAACgB,aAAP,CAAqBF,IAArB,CAAJ,EAAgC;AAC5B,YAAGA,IAAI,CAACG,cAAL,CAAoB,SAApB,CAAH,EAAmC;AAC/B;AACA,gBAAMV,aAAa,CAACO,IAAI,CAAC,SAAD,CAAL,CAAnB;AACH;AACJ;;AACD,YAAMT,gBAAgB,CAAC,KAAD,CAAtB;AACH;AACJ,GAbD,CANuB,CAoBvB;;;AAEA,sBACI,QAAC,YAAD;AAAA,4BACI,QAAC,GAAD;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAe,QAAA,MAAM,EAAE,CAAvB;AAAA,+BACA,QAAC,MAAD;AACI,UAAA,WAAW,EAAC,mBADhB;AAEI,UAAA,UAAU,MAFd;AAGI,UAAA,WAAW,EAAC,QAHhB;AAII,UAAA,IAAI,EAAC,OAJT;AAKI,UAAA,QAAQ,EAAEa,GAAG,IAAIN,gBAAgB,CAACM,GAAD,CALrC;AAMI,UAAA,OAAO,EAAEd;AANb;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAaI,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEE;AAAnB;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAvCD;;GAAMH,Y;;KAAAA,Y;AAwCN,kCAAeV,KAAK,CAAC0B,IAAN,CAAWhB,YAAX,CAAf","sourcesContent":["import React, {useState} from \"react\";\nimport LayoutMovies from '../../components/layout/index';\nimport {Row, Col, Input} from 'antd';\nimport { apiMovie } from \"../../services/movie\";\nimport {helper} from '../../helpers/common'\nimport ListMovie from \"../../components/list-movies/ListMovie\";\n\nconst {Search} = Input;\n\nconst SearchMovies = () => {\n    const [loadingSearch, setLoadingSearch] = useState(false);\n    const [dataSearch, setDataSearch] = useState([]);\n    const [page, setPage] = useState(1);\n    const [keyword, setKeyword] = useState('');\n    \n    const searchDataMovies = async (name) => {\n        if(name !== '') {\n            await setLoadingSearch(true);\n            await setKeyword(name);\n            const data = await apiMovie.searchMovieByName(name, 1);\n            if(!helper.isEmptyObject(data)) {\n                if(data.hasOwnProperty('results')) {\n                    // kiem tra co trong object co key hay ko? \n                    await setDataSearch(data['results'])\n                }\n            }\n            await setLoadingSearch(false);\n        }\n    }\n    // console.log(dataSearch);\n\n    return (\n        <LayoutMovies>\n            <Row>\n                <Col span={12} offset={6}>\n                <Search\n                    placeholder=\"name of the movie\"\n                    allowClear\n                    enterButton=\"Search\"\n                    size=\"large\"\n                    onSearch={val => searchDataMovies(val)}\n                    loading={loadingSearch}\n                    />\n                </Col>\n            </Row>\n            <ListMovie movies={dataSearch}/>\n        </LayoutMovies>\n    )\n}\nexport default React.memo(SearchMovies);"]},"metadata":{},"sourceType":"module"}