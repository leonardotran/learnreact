{"ast":null,"code":"import * as types from './actions';\nconst initialState = {\n  start: false,\n  dataCart: [],\n  errorCart: null,\n  totalMoney: 0,\n  //tong tien trong gio hang\n  totalItems: 0 // tong so luong san pham\n\n};\nexport const cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.START_ADD_CART:\n      return { ...state,\n        ...{\n          start: action.start\n        }\n      };\n\n    case types.ADD_CART_FAIL:\n      return { ...state,\n        ...{\n          errorCart: action.error\n        }\n      };\n\n    case types.ADD_CART_SUCCESS:\n      const infoPd = action.data;\n      const idPd = action.id;\n      const quantityPd = action.quantity; // kiem tra xem san pham mua da ton tai trong gio hang chua.\n      // neu ma chua ton tai thi them moi san pham vao gio hang.\n      // neu da ton tai thi chi cap nhat so luong mua trong gio hang.\n\n      const findPd = state.dataCart.find(item => item.id === idPd);\n\n      if (findPd) {\n        if (quantityPd === null) {\n          infoPd.qty += 1;\n        }\n\n        infoPd.qty += 1;\n        return { ...state,\n          totalMoney: parseFloat(state.totalMoney) + parseFloat(infoPd.price),\n          errorCart: null\n        };\n      } else {\n        infoPd.qty = 1;\n        return {\n          dataCart: [...state.dataCart, infoPd],\n          errorCart: null,\n          totalMoney: parseFloat(state.totalMoney) + parseFloat(infoPd.price),\n          totalItems: state.totalItems + 1\n        };\n      }\n\n    // them so luong mua - mac dinh mua 1 san pham\n\n    case types.REMOVE_ITEM_CART:\n      const rowId = action.rowId; // lay duoc san pham can xoa trong gio hang theo rowId \n      // xoa bo thang day - cap nhat lai gio hang\n      // cap nhat lai tong tien\n      // cap nhat lai so luong san pham \n\n      const newDataCart = state.dataCart.filter(item => item.id !== rowId); // chua nhung items ko bi xoa\n\n      const removeItem = state.dataCart.find(item => item.id === rowId); // bi xoa\n\n      const moneyRemoved = parseFloat(removeItem.price) * parseFloat(removeItem.qty);\n      const newTotalMoney = parseFloat(state.totalMoney) - moneyRemoved;\n      return { ...state,\n        ...{\n          dataCart: newDataCart,\n          totalMoney: newTotalMoney,\n          totalItems: state.totalItems - 1\n        }\n      };\n\n    case types.CHANGE_QUANTITY_ITEM_CART:\n      const quantity = action.qty;\n      const idCart = action.rowId; // cap nhat lai so luong mua cua 1 san pham \n      // cap nhat lai tong tien \n      // ko cap nhat so luong san pham trong gio hang\n      // ko cap nhat lai gio hang moi \n\n      const newChangeDataCart = state.dataCart.map(item => {\n        return item.id === idCart ? { ...item,\n          qty: quantity\n        } : item;\n      });\n      const newTotalMoneyChange = newChangeDataCart.map(item => parseFloat(item.price) * parseFloat(item.qty)).reduce((pre, next) => pre + next);\n      return { ...state,\n        ...{\n          dataCart: newChangeDataCart,\n          totalMoney: newTotalMoneyChange\n        }\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/loctran/Desktop/learnReact/src/shopping/pages/carts/reducers/cart.js"],"names":["types","initialState","start","dataCart","errorCart","totalMoney","totalItems","cartReducer","state","action","type","START_ADD_CART","ADD_CART_FAIL","error","ADD_CART_SUCCESS","infoPd","data","idPd","id","quantityPd","quantity","findPd","find","item","qty","parseFloat","price","REMOVE_ITEM_CART","rowId","newDataCart","filter","removeItem","moneyRemoved","newTotalMoney","CHANGE_QUANTITY_ITEM_CART","idCart","newChangeDataCart","map","newTotalMoneyChange","reduce","pre","next"],"mappings":"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","sourcesContent":["import * as types from './actions';\n\nconst initialState = {\n    start: false,\n    dataCart: [],\n    errorCart: null,\n    totalMoney: 0,  //tong tien trong gio hang\n    totalItems: 0 // tong so luong san pham\n}\n\nexport const cartReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case types.START_ADD_CART:\n            return {\n                ...state,\n                ...{ start: action.start }\n            }\n        case types.ADD_CART_FAIL:\n                return {\n                    ...state,\n                    ...{ errorCart: action.error }\n                }   \n\n        case types.ADD_CART_SUCCESS:\n            const infoPd = action.data;\n            const idPd = action.id;\n            const quantityPd = action.quantity;\n            // kiem tra xem san pham mua da ton tai trong gio hang chua.\n            // neu ma chua ton tai thi them moi san pham vao gio hang.\n            // neu da ton tai thi chi cap nhat so luong mua trong gio hang.\n            const findPd = state.dataCart.find(item=> item.id === idPd);\n            if(findPd) {\n                if(quantityPd === null) {\n                    infoPd.qty +=1;\n                }\n                infoPd.qty += 1;\n                return {\n                    ...state,\n                    totalMoney: parseFloat(state.totalMoney) + parseFloat(infoPd.price),\n                    errorCart: null\n                }\n            } else {\n                infoPd.qty = 1;\n                return {\n                    dataCart: [...state.dataCart, infoPd],\n                    errorCart: null,\n                    totalMoney: parseFloat(state.totalMoney) + parseFloat(infoPd.price),\n                    totalItems: state.totalItems+1\n                \n            }\n        }\n            // them so luong mua - mac dinh mua 1 san pham\n        case types.REMOVE_ITEM_CART:\n            const rowId = action.rowId;\n            // lay duoc san pham can xoa trong gio hang theo rowId \n            // xoa bo thang day - cap nhat lai gio hang\n            // cap nhat lai tong tien\n            // cap nhat lai so luong san pham \n            const newDataCart = state.dataCart.filter(item => item.id !== rowId); // chua nhung items ko bi xoa\n            const removeItem = state.dataCart.find(item => item.id === rowId); // bi xoa\n            const moneyRemoved = parseFloat(removeItem.price)*parseFloat(removeItem.qty);\n            const newTotalMoney = parseFloat(state.totalMoney) - moneyRemoved;\n            return {\n                ...state,\n                ...{\n                    dataCart: newDataCart,\n                    totalMoney: newTotalMoney,\n                    totalItems: state.totalItems-1\n                }\n\n            }\n        case types.CHANGE_QUANTITY_ITEM_CART:\n            const quantity = action.qty; \n            const idCart = action.rowId;\n            // cap nhat lai so luong mua cua 1 san pham \n            // cap nhat lai tong tien \n            // ko cap nhat so luong san pham trong gio hang\n            // ko cap nhat lai gio hang moi \n            const newChangeDataCart = state.dataCart.map(item => {\n                return item.id === idCart ? {...item, qty: quantity} : item;\n            });\n            const newTotalMoneyChange = newChangeDataCart.map(item => parseFloat(item.price) * parseFloat(item.qty)).reduce((pre,next) => pre+next);\n            return {\n                ...state,\n                ...{\n                    dataCart: newChangeDataCart,\n                    totalMoney: newTotalMoneyChange\n\n                }\n            }\n\n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}