{"ast":null,"code":"var _jsxFileName = \"/Users/loctran/Desktop/hocreact/src/redux/counter/components/increment.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { incrementNumber } from \"../action/index\"; //hooks react reduc\n\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IncrementCounter = () => {\n  _s();\n\n  const dispatch = useDispatch(); // lay state tu store\n\n  const count = useSelector(state => state.counter.count);\n\n  const dispatchIncrementNumber = () => {\n    dispatch(incrementNumber());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    children: \" + \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(IncrementCounter, \"sLvjKYB6p3UGc7sJU9GRpmu5PoQ=\", true, function () {\n  return [useDispatch];\n});\n\n_c = IncrementCounter;\nexport default _c2 = /*#__PURE__*/React.memo(IncrementCounter);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IncrementCounter\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/loctran/Desktop/hocreact/src/redux/counter/components/increment.js"],"names":["React","incrementNumber","useDispatch","IncrementCounter","dispatch","count","useSelector","state","counter","dispatchIncrementNumber","memo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,iBAAhC,C,CAAmD;;AACnD,SAASC,WAAT,QAA4B,aAA5B;;;AAGA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,QAAMC,QAAQ,GAAGF,WAAW,EAA5B,CAD2B,CAE3B;;AACA,QAAMG,KAAK,GAAGC,WAAW,CAACC,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcH,KAAxB,CAAzB;;AAEA,QAAMI,uBAAuB,GAAG,MAAM;AAClCL,IAAAA,QAAQ,CAACH,eAAe,EAAhB,CAAR;AACH,GAFD;;AAGA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAbD;;GAAME,gB;UACeD,W;;;KADfC,gB;AAeN,kCAAeH,KAAK,CAACU,IAAN,CAAWP,gBAAX,CAAf","sourcesContent":["import React from \"react\";\nimport { incrementNumber } from \"../action/index\"; //hooks react reduc\nimport { useDispatch } from 'react-redux';\n\n\nconst IncrementCounter = () => {\n    const dispatch = useDispatch();\n    // lay state tu store\n    const count = useSelector(state => state.counter.count);\n\n    const dispatchIncrementNumber = () => {\n        dispatch(incrementNumber())\n    }\n    return(\n        <button> + </button>\n\n    )\n    \n}\n\nexport default React.memo(IncrementCounter);"]},"metadata":{},"sourceType":"module"}