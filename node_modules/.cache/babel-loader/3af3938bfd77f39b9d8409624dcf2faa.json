{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport * as actions from '../reducers/action';\nimport { apiShopping } from \"../../../services/api\";\nimport { helpers } from \"../../../helpers/common\";\nimport { func } from \"prop-types\";\n\nfunction* detailSaga({\n  id\n}) {\n  try {\n    yield put(actions.loadingGetDetailProduct(true));\n    const data = yield call(apiShopping.getAllDataProductsById, parseInt(id));\n\n    if (!helpers.isEmptyObject(data)) {\n      yield put(actions.getDataDetailProductSucess(data));\n    } else {\n      yield put(actions.getDetailProductFail({\n        code: 404,\n        message: 'Not Found Data'\n      }));\n    }\n  } catch (e) {\n    yield put(actions.getDetailProductFail({\n      code: 500,\n      message: e\n    }));\n  } finally {\n    yield put(actions.loadingGetDetailProduct(false));\n  }\n}\n\nexport function* watchDetailSaga() {\n  yield takeEvery(actions.REQUEST_GET_DETAILS_DATA, detailSaga);\n}","map":{"version":3,"sources":["/Users/loctran/Desktop/learnReact/src/shopping/pages/detail/sagas/detail.js"],"names":["call","put","takeEvery","actions","apiShopping","helpers","func","detailSaga","id","loadingGetDetailProduct","data","getAllDataProductsById","parseInt","isEmptyObject","getDataDetailProductSucess","getDetailProductFail","code","message","e","watchDetailSaga","REQUEST_GET_DETAILS_DATA"],"mappings":"AAAA,SAASA,IAAT,EAAcC,GAAd,EAAkBC,SAAlB,QAAmC,oBAAnC;AACA,OAAO,KAAKC,OAAZ,MAAyB,oBAAzB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,IAAT,QAAqB,YAArB;;AAEA,UAAUC,UAAV,CAAqB;AAACC,EAAAA;AAAD,CAArB,EAA2B;AACvB,MAAI;AACA,UAAMP,GAAG,CAACE,OAAO,CAACM,uBAAR,CAAgC,IAAhC,CAAD,CAAT;AACA,UAAMC,IAAI,GAAG,MAAMV,IAAI,CAACI,WAAW,CAACO,sBAAb,EAAqCC,QAAQ,CAACJ,EAAD,CAA7C,CAAvB;;AACA,QAAG,CAACH,OAAO,CAACQ,aAAR,CAAsBH,IAAtB,CAAJ,EAAgC;AAC5B,YAAMT,GAAG,CAACE,OAAO,CAACW,0BAAR,CAAmCJ,IAAnC,CAAD,CAAT;AAEH,KAHD,MAGO;AACH,YAAMT,GAAG,CAACE,OAAO,CAACY,oBAAR,CAA6B;AACnCC,QAAAA,IAAI,EAAE,GAD6B;AAEnCC,QAAAA,OAAO,EAAE;AAF0B,OAA7B,CAAD,CAAT;AAIH;AACJ,GAZD,CAYE,OAAMC,CAAN,EAAS;AACP,UAAMjB,GAAG,CAACE,OAAO,CAACY,oBAAR,CAA6B;AACnCC,MAAAA,IAAI,EAAE,GAD6B;AAEnCC,MAAAA,OAAO,EAAEC;AAF0B,KAA7B,CAAD,CAAT;AAIH,GAjBD,SAiBU;AACN,UAAMjB,GAAG,CAACE,OAAO,CAACM,uBAAR,CAAgC,KAAhC,CAAD,CAAT;AACH;AACJ;;AAED,OAAO,UAAUU,eAAV,GAA4B;AAC/B,QAAMjB,SAAS,CAACC,OAAO,CAACiB,wBAAT,EAAmCb,UAAnC,CAAf;AACH","sourcesContent":["import { call,put,takeEvery } from \"redux-saga/effects\";\nimport * as actions from '../reducers/action';\nimport { apiShopping } from \"../../../services/api\";\nimport { helpers } from \"../../../helpers/common\";\nimport { func } from \"prop-types\";\n\nfunction* detailSaga({id}) {\n    try {\n        yield put(actions.loadingGetDetailProduct(true));\n        const data = yield call(apiShopping.getAllDataProductsById, parseInt(id));\n        if(!helpers.isEmptyObject(data)){\n            yield put(actions.getDataDetailProductSucess(data));\n\n        } else {\n            yield put(actions.getDetailProductFail({\n                code: 404,\n                message: 'Not Found Data'\n            }));\n        }\n    } catch(e) {\n        yield put(actions.getDetailProductFail({\n            code: 500,\n            message: e\n        }));\n    } finally {\n        yield put(actions.loadingGetDetailProduct(false))\n    }\n}\n\nexport function* watchDetailSaga() {\n    yield takeEvery(actions.REQUEST_GET_DETAILS_DATA, detailSaga);\n}"]},"metadata":{},"sourceType":"module"}