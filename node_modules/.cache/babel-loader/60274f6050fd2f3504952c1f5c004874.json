{"ast":null,"code":"import { KEY_LOGIN } from './constant';\nimport { jwt } from 'jsonwebtoken';\n\nfunction isEmptyObject(obj) {\n  for (let prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      return false; // Khong rong\n    }\n  }\n\n  return JSON.stringify(obj) === JSON.stringify({}); // tra ve true ===> object empty\n}\n\nfunction saveTokenLocalStorage(token) {\n  if (token !== null && token !== undefined && token !== '') {\n    localStorage.setItem('tokenMovieLogin', token);\n  }\n}\n\nfunction removeTokenLocalStorage() {\n  localStorage.remove('tokenMovieLogin');\n}\n\nfunction getTokenLocalStorage() {\n  let token = localStorage.getItem('tokenMovieLogin');\n\n  if (token !== null && token !== undefined && token !== '') {\n    return token;\n  }\n\n  return null;\n}\n\nfunction decryptionTokenStorage() {\n  let token = getTokenLocalStorage();\n  let decode = {};\n\n  if (token !== null) {\n    //giai ma \n    let decode = jwt.verify(token, KEY_LOGIN);\n  }\n\n  return decode;\n}\n\nfunction getUserTokenStorage() {\n  let infoUser = decryptionTokenStorage();\n\n  if (infoUser.hasOwnProperty('username')) {\n    return infoUser['username'];\n  }\n\n  return null;\n}\n\nfunction getIdUserTokenStorage() {\n  let infoUser = decryptionTokenStorage();\n\n  if (infoUser.hasOwnProperty('id')) {\n    return infoUser['id'];\n  }\n\n  return null;\n}\n\nfunction checkUserIsLogined() {\n  let username = getUserTokenStorage();\n  let idUser = getIdUserTokenStorage();\n\n  if (username !== null && idUser !== null) {\n    return true;\n  }\n}\n\nexport const helper = {\n  isEmptyObject,\n  saveTokenLocalStorage,\n  removeTokenLocalStorage,\n  decryptionTokenStorage\n};","map":{"version":3,"sources":["/Users/loctran/Desktop/hocreact/src/netflix/helpers/common.js"],"names":["KEY_LOGIN","jwt","isEmptyObject","obj","prop","Object","prototype","hasOwnProperty","call","JSON","stringify","saveTokenLocalStorage","token","undefined","localStorage","setItem","removeTokenLocalStorage","remove","getTokenLocalStorage","getItem","decryptionTokenStorage","decode","verify","getUserTokenStorage","infoUser","getIdUserTokenStorage","checkUserIsLogined","username","idUser","helper"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,YAAxB;AACA,SAAQC,GAAR,QAAkB,cAAlB;;AAGA,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;AACxB,OAAI,IAAIC,IAAR,IAAgBD,GAAhB,EAAqB;AACnB,QAAGE,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCL,GAArC,EAA0CC,IAA1C,CAAH,EAAoD;AAClD,aAAO,KAAP,CADkD,CAElD;AACD;AACF;;AAED,SAAOK,IAAI,CAACC,SAAL,CAAeP,GAAf,MAAwBM,IAAI,CAACC,SAAL,CAAe,EAAf,CAA/B,CARwB,CASxB;AACD;;AAEH,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AACpC,MAAGA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKC,SAA5B,IAAyCD,KAAK,KAAK,EAAtD,EAA0D;AACxDE,IAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCH,KAAxC;AACD;AACF;;AAED,SAASI,uBAAT,GAAmC;AACjCF,EAAAA,YAAY,CAACG,MAAb,CAAoB,iBAApB;AACD;;AAED,SAASC,oBAAT,GAAgC;AAC9B,MAAIN,KAAK,GAAGE,YAAY,CAACK,OAAb,CAAqB,iBAArB,CAAZ;;AACA,MAAGP,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKC,SAA5B,IAAyCD,KAAK,KAAK,EAAtD,EAA0D;AACxD,WAAOA,KAAP;AACD;;AACD,SAAO,IAAP;AACD;;AAED,SAASQ,sBAAT,GAAkC;AAChC,MAAIR,KAAK,GAAGM,oBAAoB,EAAhC;AACA,MAAIG,MAAM,GAAG,EAAb;;AACA,MAAIT,KAAK,KAAK,IAAd,EAAmB;AACjB;AACA,QAAIS,MAAM,GAAGpB,GAAG,CAACqB,MAAJ,CAAWV,KAAX,EAAkBZ,SAAlB,CAAb;AACD;;AACD,SAAOqB,MAAP;AACD;;AAED,SAASE,mBAAT,GAA+B;AAC7B,MAAIC,QAAQ,GAAGJ,sBAAsB,EAArC;;AACA,MAAII,QAAQ,CAACjB,cAAT,CAAwB,UAAxB,CAAJ,EAAyC;AACvC,WAAOiB,QAAQ,CAAC,UAAD,CAAf;AACD;;AACD,SAAO,IAAP;AACD;;AACD,SAASC,qBAAT,GAAiC;AAC/B,MAAID,QAAQ,GAAGJ,sBAAsB,EAArC;;AACA,MAAII,QAAQ,CAACjB,cAAT,CAAwB,IAAxB,CAAJ,EAAmC;AACjC,WAAOiB,QAAQ,CAAC,IAAD,CAAf;AACD;;AACD,SAAO,IAAP;AACD;;AAED,SAASE,kBAAT,GAA8B;AAC5B,MAAIC,QAAQ,GAAGJ,mBAAmB,EAAlC;AACA,MAAIK,MAAM,GAAGH,qBAAqB,EAAlC;;AACA,MAAIE,QAAQ,KAAK,IAAb,IAAqBC,MAAM,KAAK,IAApC,EAAyC;AACvC,WAAO,IAAP;AACD;AAEF;;AAIC,OAAO,MAAMC,MAAM,GAAG;AAClB3B,EAAAA,aADkB;AAElBS,EAAAA,qBAFkB;AAGlBK,EAAAA,uBAHkB;AAIlBI,EAAAA;AAJkB,CAAf","sourcesContent":["import {KEY_LOGIN} from './constant';\nimport {jwt} from 'jsonwebtoken'\n\n\nfunction isEmptyObject(obj) {\n    for(let prop in obj) {\n      if(Object.prototype.hasOwnProperty.call(obj, prop)) {\n        return false;\n        // Khong rong\n      }\n    }\n  \n    return JSON.stringify(obj) === JSON.stringify({});\n    // tra ve true ===> object empty\n  }\n\nfunction saveTokenLocalStorage(token) {\n  if(token !== null && token !== undefined && token !== '') {\n    localStorage.setItem('tokenMovieLogin', token);\n  }\n}\n\nfunction removeTokenLocalStorage() {\n  localStorage.remove('tokenMovieLogin');\n}\n\nfunction getTokenLocalStorage() {\n  let token = localStorage.getItem('tokenMovieLogin');\n  if(token !== null && token !== undefined && token !== '') {\n    return token;\n  }\n  return null;\n}\n\nfunction decryptionTokenStorage() {\n  let token = getTokenLocalStorage();\n  let decode = {};\n  if (token !== null){\n    //giai ma \n    let decode = jwt.verify(token, KEY_LOGIN);\n  } \n  return decode; \n}\n\nfunction getUserTokenStorage() {\n  let infoUser = decryptionTokenStorage();\n  if (infoUser.hasOwnProperty('username')) {\n    return infoUser['username'];\n  }\n  return null;\n}\nfunction getIdUserTokenStorage() {\n  let infoUser = decryptionTokenStorage();\n  if (infoUser.hasOwnProperty('id')) {\n    return infoUser['id'];\n  }\n  return null;\n}\n\nfunction checkUserIsLogined() {\n  let username = getUserTokenStorage();\n  let idUser = getIdUserTokenStorage();\n  if (username !== null && idUser !== null){\n    return true;\n  }\n\n}\n\n\n\n  export const helper = {\n      isEmptyObject,\n      saveTokenLocalStorage,\n      removeTokenLocalStorage,\n      decryptionTokenStorage\n  }"]},"metadata":{},"sourceType":"module"}