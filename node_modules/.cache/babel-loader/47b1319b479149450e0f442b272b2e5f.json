{"ast":null,"code":"var _jsxFileName = \"/Users/loctran/Desktop/hocreact/src/netflix/pages/search/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport LayoutMovies from '../../components/layout/index';\nimport { Row, Col, Input, Skeleton } from 'antd';\nimport { apiMovie } from \"../../services/movie\";\nimport { helper } from '../../helpers/common';\nimport ListMovie from \"../../components/list-movies/ListMovie\";\nimport PaginationMovie from \"../../components/list-movies/pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Search\n} = Input;\n\nconst SearchMovies = () => {\n  _s();\n\n  const [loadingSearch, setLoadingSearch] = useState(false);\n  const [dataSearch, setDataSearch] = useState([]);\n  const [page, setPage] = useState(1);\n  const [keyword, setKeyword] = useState('');\n  const [totalItem, setTotalItem] = useState(0);\n  const [totalPage, setTotalPage] = useState(0);\n\n  const searchDataMovies = async (name, p = 1) => {\n    if (name !== '') {\n      await setLoadingSearch(true);\n\n      if (name !== keyword) {\n        await setKeyword(name);\n      }\n\n      const data = await apiMovie.searchMovieByName(name, p);\n\n      if (!helper.isEmptyObject(data)) {\n        if (data.hasOwnProperty('results')) {\n          // kiem tra co trong object co key hay ko? \n          await setDataSearch(data['results']);\n        }\n\n        if (data.hasOwnProperty('total_pages')) {\n          // kiem tra co trong object co key hay ko? \n          await setTotalPage(data['total_pages']);\n        }\n\n        if (data.hasOwnProperty('total_results')) {\n          // kiem tra co trong object co key hay ko? \n          await setTotalItem(data['total_results']);\n        }\n      }\n\n      await setLoadingSearch(false);\n    }\n  };\n\n  const changePageMovie = p => {\n    if (p >= 1 && p <= totalPage) {\n      searchDataMovies(keyword, p);\n      setPage(p);\n    }\n  }; // console.log(dataSearch);\n\n\n  return /*#__PURE__*/_jsxDEV(LayoutMovies, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        offset: 6,\n        children: /*#__PURE__*/_jsxDEV(Search, {\n          placeholder: \"name of the movie\",\n          allowClear: true,\n          enterButton: \"Search\",\n          size: \"large\",\n          onSearch: val => searchDataMovies(val),\n          loading: loadingSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), loadingSearch ? /*#__PURE__*/_jsxDEV(Skeleton, {\n      active: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 30\n    }, this) : /*#__PURE__*/_jsxDEV(ListMovie, {\n      movies: dataSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 52\n    }, this), /*#__PURE__*/_jsxDEV(ListMovie, {\n      movies: dataSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), dataSearch.length > 0 && /*#__PURE__*/_jsxDEV(PaginationMovie, {\n      current: page,\n      totalItems: totalItem,\n      changePage: changePageMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchMovies, \"Sowivg/xYJTUua7zeWbh6RJGwBE=\");\n\n_c = SearchMovies;\nexport default _c2 = /*#__PURE__*/React.memo(SearchMovies);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchMovies\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/loctran/Desktop/hocreact/src/netflix/pages/search/index.js"],"names":["React","useState","LayoutMovies","Row","Col","Input","Skeleton","apiMovie","helper","ListMovie","PaginationMovie","Search","SearchMovies","loadingSearch","setLoadingSearch","dataSearch","setDataSearch","page","setPage","keyword","setKeyword","totalItem","setTotalItem","totalPage","setTotalPage","searchDataMovies","name","p","data","searchMovieByName","isEmptyObject","hasOwnProperty","changePageMovie","val","length","memo"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport LayoutMovies from '../../components/layout/index';\nimport {Row, Col, Input, Skeleton} from 'antd';\nimport { apiMovie } from \"../../services/movie\";\nimport {helper} from '../../helpers/common'\nimport ListMovie from \"../../components/list-movies/ListMovie\";\nimport PaginationMovie from \"../../components/list-movies/pagination\"\n\nconst {Search} = Input;\n\nconst SearchMovies = () => {\n    const [loadingSearch, setLoadingSearch] = useState(false);\n    const [dataSearch, setDataSearch] = useState([]);\n    const [page, setPage] = useState(1);\n    const [keyword, setKeyword] = useState('');\n    const [totalItem, setTotalItem] = useState(0);\n    const [totalPage, setTotalPage] = useState(0);\n    \n\n\n\n    const searchDataMovies = async (name, p = 1) => {\n        if(name !== '') {\n            await setLoadingSearch(true);\n            if(name !== keyword){\n                await setKeyword(name);\n            }\n            const data = await apiMovie.searchMovieByName(name, p);\n            if(!helper.isEmptyObject(data)) {\n                if(data.hasOwnProperty('results')) {\n                    // kiem tra co trong object co key hay ko? \n                    await setDataSearch(data['results'])\n                }\n                if(data.hasOwnProperty('total_pages')) {\n                    // kiem tra co trong object co key hay ko? \n                    await setTotalPage(data['total_pages'])\n                }\n                if(data.hasOwnProperty('total_results')) {\n                    // kiem tra co trong object co key hay ko? \n                    await setTotalItem(data['total_results'])\n                }\n            }\n            await setLoadingSearch(false);\n        }\n    }\n\n    const changePageMovie = (p) => {\n        if(p>=1 && p<= totalPage) {\n            searchDataMovies(keyword, p)\n            setPage(p);\n\n        }\n    }\n    // console.log(dataSearch);\n\n    return (\n        <LayoutMovies>\n            <Row>\n                <Col span={12} offset={6}>\n                <Search\n                    placeholder=\"name of the movie\"\n                    allowClear\n                    enterButton=\"Search\"\n                    size=\"large\"\n                    onSearch={val => searchDataMovies(val)}\n                    loading={loadingSearch}\n                    />\n                </Col>\n            </Row>\n            {loadingSearch ? <Skeleton active /> : <ListMovie movies={dataSearch}/> }\n            <ListMovie movies={dataSearch}/>\n            {dataSearch.length > 0\n            &&\n            <PaginationMovie \n            current={page} \n            totalItems={totalItem}\n            changePage={changePageMovie}\n            />\n            }\n        </LayoutMovies>\n    )\n}\nexport default React.memo(SearchMovies);"]},"metadata":{},"sourceType":"module"}